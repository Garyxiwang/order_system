version: '3.8'

services:
  # Nginx 反向代理
  nginx:
    image: nginx:alpine
    container_name: order_system_nginx
    ports:
      - "80:80"
      - "443:443"  # 如果需要 HTTPS
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./logs/nginx:/var/log/nginx  # 日志目录
      - /etc/localtime:/etc/localtime:ro
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    environment:
      - TZ=Asia/Shanghai
    depends_on:
      - frontend
      - backend
      - database
    networks:
      - order_system_network

  # 前端服务
  frontend:
    build:
      context: ./front
      dockerfile: Dockerfile
    container_name: order_system_frontend
    ports:
      - "3000:3000"  # 内部端口，通过 nginx 访问
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://localhost/api  # 通过 nginx 代理访问后端
      - TZ=Asia/Shanghai
    volumes:
      - /etc/localtime:/etc/localtime:ro
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - order_system_network
    restart: unless-stopped
    depends_on:
      - backend

  # 后端服务
  backend:
    build:
      context: ./server
      dockerfile: Dockerfile.china
    container_name: order_system_backend
    ports:
      - "8000:8000"  # 内部端口，通过 nginx 访问
    environment:
      - ENVIRONMENT=production
      - DATABASE_URL=${DATABASE_URL:-postgresql://${DB_USER:-postgres}:${DB_PASSWORD:-postgres123}@database:5432/order_system}
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-here}
      - TZ=Asia/Shanghai
    volumes:
      - ./server/data:/app/data  # 数据持久化
      - /etc/localtime:/etc/localtime:ro
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - order_system_network
    restart: unless-stopped
    depends_on:
      - database

  # 数据库服务（PostgreSQL）
  database:
    image: postgres:15-alpine
    container_name: order_system_db
    environment:
      POSTGRES_DB: order_system
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres123}
      TZ: Asia/Shanghai
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - /etc/localtime:/etc/localtime:ro
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - order_system_network
    restart: unless-stopped
    ports:
      - "5433:5432"

networks:
  order_system_network:
    driver: bridge

volumes:
  postgres_data:  # 如果使用 PostgreSQL
    driver: local